#!/bin/bash


QUIET=0


#echo "Running argparse, $# args"



function checkFile {
	if [ -f $1 ]; then
		echo "[$(tput setaf 2)$(tput bold)   OK   $(tput sgr0)] File $(tput bold)$1$(tput sgr0) found"
	else
		echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] File $(tput bold)$1$(tput sgr0) not found"
		EXITSTATUS=1
	fi
}

function checkDir {
	if [ -d $1 ]; then
		echo "[$(tput setaf 2)$(tput bold)   OK   $(tput sgr0)] Directory $(tput bold)$1$(tput sgr0) found"
	else
		echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] Directory $(tput bold)$1$(tput sgr0) not found"
		EXITSTATUS=1
	fi
}



function cmdexists()
{
  command -v "$1" >/dev/null 2>&1
}


function checkCommand {
if cmdexists $1; then
	if [ ${QUIET} = 0 ]; then
		echo "[$(tput setaf 2)$(tput bold)   OK   $(tput sgr0)] Command $(tput bold)$1$(tput sgr0) found"
    fi
    COMMAND_FOUND=1
else
	if [ ${QUIET} = 0 ]; then
		echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] Command $(tput bold)$1$(tput sgr0) not installed.  Aborting."
    fi
    COMMAND_FOUND=0
    EXITSTATUS=1;
fi
}






function printHELP {

optlistshort=""
optindex=0
while [ $optindex -lt ${NBopt} ]; do
  optlistshort="${optlistshort}[-${inputMSoptshortARRAY[$optindex]}]"
  let optindex+=1
done
	
echo "------------------------------------------------------------------------"
echo "${txBold} $pname : ${MSdescr}  ${txReset}"
echo "------------------------------------------------------------------------"
echo " $(tput bold)USAGE:$(tput sgr0)"
echo "     $0 [OPTION]"
echo ""
echo " $(tput bold)OPTIONS:$(tput sgr0)"
optindex=0
while [ $optindex -lt ${NBopt} ]; do
  echo -e " ${fgRed}-${inputMSoptshortARRAY[$optindex]}${txReset}, ${fgRed}--${inputMSoptlongARRAY[$optindex]}${txReset} ${fgBGreen}${inputMSoptargARRAY[$optindex]}${txReset}"
  echo "     ${inputMSoptdescrARRAY[$optindex]}"
  let optindex+=1
done
echo ""
exit
}



printHELPshort ()
{
	printf "%20s       ${MSdescr}\n" "$0" 
	exit
}



# call settrap function 
settrap







# =================================================
#   CHECK PREREQUISITES
# =================================================
function checkallprerequisites()
{
for cmd in ${RequiredCommands[@]}; do
  checkCommand $cmd
done


for fname in ${RequiredFiles[@]}; do
  checkFile $fname
done

for dname in ${RequiredDirs[@]}; do
  checkDir $dname
done
}





# =================================================
#   ARGUMENT PARSING
# =================================================


PARAMS=""


# Options
inputMSoptshortARRAY=( )
inputMSoptlongARRAY=( )
inputMSoptfuncARRAY=( )
inputMSoptnbargARRAY=( )
inputMSoptdescrARRAY=( )

# Arguments
inputMSargARRAY=( )


# parse options
# options stored as declarative array using short notation
NBopt=0
declare -A OPTlong
declare -A OPTfunc
declare -A OPTarg
declare -A OPTlong2short

declare -A OPTargstring

# list of active options
optactlist=( )

NBopt=0
for optdat in "${MSopt[@]}";do
  #echo "Option ${NBopt}: $optdat"
  IFS=';' read -r -a optarray <<< "$optdat"
  let NBopt+=1
  inputMSoptshortARRAY+=( ${optarray[0]} )
  inputMSoptlongARRAY+=( ${optarray[1]} )
  inputMSoptfuncARRAY+=( ${optarray[2]} )
  inputMSoptargARRAY+=( "${optarray[3]}" )
  inputMSoptdescrARRAY+=( "${optarray[4]}" )
  OPTlong[${optarray[0]}]="${optarray[1]}"
  OPTfunc[${optarray[0]}]="${optarray[2]}"
  OPTarg[${optarray[0]}]="${optarray[3]}"
  OPTlong2short[${OPTlong[${optarray[0]}]}]=${optarray[0]}
done


#echo "processing arg string; $#"
shiftcnt=1
optargstring=""
inputParamString=""

function getoptargs {
	optargstring=""
	shiftcnt=0
	nboptarg=$( wc -w <<< "${OPTarg[$shortopt]}" )
	#echo "nboptarg = ${nboptarg} from $@"
	optargindex=0
    while [ $optargindex -lt ${nboptarg} ]; do
	  let shiftcnt+=1
	  let optargindex+=1
	  optargstring="${optargstring} $1"
	  shift
	done
}


while (( "$#" )); do
  case "$1" in
  --*) # long option
    #echo "long option: $1"
    inputMSoptlongARRAY+=( $1 )
    longopt=$1
    longopt="${longopt:2}"
    shortopt=${OPTlong2short[$longopt]}
    #echo "func $1 $shortopt : ${OPTfunc[${shortopt}]}"
    optactlist+=( $shortopt )
    shift
    getoptargs $@
    OPTargstring[${shortopt}]=${optargstring}
    shift ${shiftcnt}
  ;;
  -*) # short option
    inputMSoptshortARRAY+=( $1 )
    shortopt=$1
    shortopt="${shortopt:1}"        
    #echo "func $1 $shortopt : ${OPTfunc[${shortopt}]}"
    optactlist+=( $shortopt )
    shift
    getoptargs $@
    OPTargstring[${shortopt}]=${optargstring}
	shift ${shiftcnt}
  ;;
  *)
    #echo "param: $1"
    inputMSargARRAY+=( $1 )
    inputParamString="${inputParamString} $1"
    shift
  ;;
  esac
done



NBarg=0
for MSarg in "${inputMSargARRAY[@]}";do
  #echo "   input argument $NBarg : $MSarg"
  let NBarg+=1
done

NBoptact=0
for MSopt in "${optactlist[@]}";do
  #echo "   input option   ${NBoptact} : $MSopt -> ${OPTfunc[$MSopt]} ${OPTargstring[$MSopt]}"
  ${OPTfunc[$MSopt]} ${OPTargstring[$MSopt]}
  let NBoptact+=1
done



# set positional arguments in their proper place
eval set -- "$inputParamString"



checkallprerequisites









